-- Version 1.04
-- EXECUTE FIRST TO CREATE THE DATABASE:
-- CREATE DATABASE WEB_TAKE_A_REF;

USE WEB_TAKE_A_REF;

-- CREATE USER TABLE
-- IF IT DOESN'T WORK ON YOUR SQL STUDIO
-- CHANGE IDENTITY(1, 1) TO AUTO_INCREMENT

CREATE TABLE USERS(
	User_ID			INT NOT NULL AUTO_INCREMENT,
	Password		VARCHAR(1000) NOT NULL,
	EMail			VARCHAR(1000) NOT NULL,
	FirstName 		VARCHAR(100) NOT NULL,
	LastName 		VARCHAR(100) NOT NULL,
	CourseEdition 		VARCHAR(100) NOT NULL,
	UserGrade		INT NOT NULL DEFAULT 1,
	FN			INT NOT NULL,

	PRIMARY KEY(User_ID),
	UNIQUE(EMail)
);

-- CREATE LIBRARY TABLE
-- IF IT DOESN'T WORK ON YOUR SQL STUDIO
-- CHANGE IDENTITY(1, 1) TO AUTO_INCREMENT

CREATE TABLE REF_LIBRARY(
	Book_ID			INT NOT NULL AUTO_INCREMENT,
	Title			VARCHAR(1000) NOT NULL,
	Ref				VARCHAR(5000) NOT NULL,
	Max_Exports		INT NOT NULL,
	Keywords		VARCHAR(5000) NOT NULL,
	RefID			INT NULL,
	CourseEdition	VARCHAR(10) NOT NULL,
	Category		VARCHAR(1000) NULL,
	Link			VARCHAR(2500) NULL,

	PRIMARY KEY(Book_ID)
);

-- CREATE OWNED BOOKS TABLE
-- CONSTRAINT ONE USER CAN RENT ONE REF ONLY ONCE

CREATE TABLE OWNED_REFS(
	User_ID			INT NOT NULL,
	Book_ID			INT NOT NULL,
	Deadline		DATE NOT NULL,

	CONSTRAINT PK_Composite_User_Books PRIMARY KEY(User_ID, Book_ID),
    	FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    	FOREIGN KEY(Book_ID) REFERENCES REF_LIBRARY(Book_ID)
);

-- CREATE EXPORTED BOOKS TABLE

CREATE TABLE EXPORTED_REFS(
	Book_ID		INT NOT NULL,
	Exports		INT NOT NULL,
    
    	FOREIGN KEY(Book_ID) REFERENCES REF_LIBRARY(Book_ID)
);

-- CREATE PENDING BOOKS TABLE
-- IF IT DOESN'T WORK ON YOUR SQL STUDIO
-- CHANGE IDENTITY(1, 1) TO AUTO_INCREMENT

-- IMPUser_ID IS THE ID OF THE USER THAT IMPORTS THE BOOK

CREATE TABLE PENDING_REFS(
	Pedning_ID		INT NOT NULL AUTO_INCREMENT,
	IMPUser_ID		INT NOT NULL,
	Title			VARCHAR(1000) NOT NULL,
	File			VARCHAR(1000) NOT NULL,
	
	PRIMARY KEY(Pedning_ID),
    	FOREIGN KEY(IMPUser_ID) REFERENCES USERS(User_ID)
);

CREATE TABLE USER_ROLES
(
	UserRoleID INT NOT NULL PRIMARY KEY,
    UserRoleLabel VARCHAR(100) NOT NULL
);

INSERT INTO USER_ROLES VALUES (1, 'User'), (2, 'Moderator'), (3, 'Admin');

CREATE TABLE COURSE_EDITION
(
	CourseEditionID INT NOT NULL PRIMARY KEY
);

INSERT INTO COURSE_EDITION VALUES (15), (16), (17);

ALTER TABLE REF_LIBRARY
ADD FULLTEXT(Title, Keywords);
